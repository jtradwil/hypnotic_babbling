<launch>
  <arg name="use_sim_time" default="true" />
  <arg name="gui" default="true" />
  <arg name="headless" default="false" />
  <arg name="world_name" default="$(find map_sim)/worlds/mapping_test.world" />

  <!-- Short-term hack to support the original front_laser:=true argument for spawning
       the simulator. This will be removed in favour of using the config:=x arg instead. -->
  <arg name="default_config" value="base"/>
  <!-- end of hack -->

  <!-- Configuration of Jackal which you would like to simulate.
       See jackal_description for details. -->
  <arg name="config" default="$(arg default_config)" />

  <!-- Launch Gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="0" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="use_sim_time" value="$(arg use_sim_time)" />
    <arg name="headless" value="$(arg headless)" />
    <arg name="world_name" value="$(arg world_name)" />
  </include>

  <!-- Load Jackal's description, controllers, and teleop nodes. -->
  <include file="$(find map_sim)/launch/description.launch">
    <arg name="config" value="$(arg config)" />
  </include>
  <include file="$(find jackal_control)/launch/control.launch" />
  <include file="$(find jackal_control)/launch/teleop.launch">
    <arg name="joystick" value="false"/>
  </include>

  <!-- Spawn Jackal -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
	      args="-urdf -model jackal_5900 -param robot_description -x 5 -y -5 -z 1.0 -R 0 -P 0 -Y -1.5707" />
	   
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">

    <rosparam file="$(find map_sim)/params/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find map_sim)/params/costmap_common_params.yaml" command="load" ns="local_costmap" />

    <rosparam file="$(find map_sim)/params/odom_nav_params/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find map_sim)/params/odom_nav_params/local_costmap_params.yaml" command="load" />

    <rosparam file="$(find map_sim)/params/base_local_planner_params.yaml" command="load" />
    <rosparam file="$(find map_sim)/params/move_base_params.yaml" command="load" />

    <param name="base_global_planner" type="string" value="navfn/NavfnROS" />
    <param name="base_local_planner" value="base_local_planner/TrajectoryPlannerROS"/>

    <remap from="odom" to="odometry/filtered" />
  </node>
	   
  <arg name="scan_topic" default="scan" />

  <node pkg="gmapping" type="slam_gmapping" name="slam_gmapping">

    <param name="odom_frame" value="odom"/>
    <param name="base_frame" value="base_link"/>
    <param name="map_frame" value="map"/>

    <!-- Process 1 out of every this many scans (set it to a higher number to skip more scans)  -->
    <param name="throttle_scans" value="1"/>

    <param name="map_update_interval" value="0.5"/> <!-- default: 5.0 -->

    <!-- The maximum usable range of the laser. A beam is cropped to this value.  -->
    <param name="maxUrange" value="15"/>

    <!-- The maximum range of the sensor. If regions with no obstacles within the range of the sensor should appear as free space in the map, set maxUrange < maximum range of the real sensor <= maxRange -->
    <param name="maxRange" value="30.0"/>

    <param name="sigma" value="0.035"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.025"/>
    <param name="astep" value="0.025"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="minimumScore" value="50.0"/>
    <!-- Number of beams to skip in each scan. -->
    <param name="lskip" value="0"/>

    <param name="srr" value="0.0825"/>
    <param name="srt" value="0.15"/>
    <param name="str" value="0.0825"/>
    <param name="stt" value="0.275"/>

    <!-- Process a scan each time the robot translates this far  -->
    <param name="linearUpdate" value="0.01"/>

    <!-- Process a scan each time the robot rotates this far  -->
    <param name="angularUpdate" value="0.010"/>

    <param name="temporalUpdate" value="-1.0"/>
    <param name="resampleThreshold" value="0.5"/>

    <!-- Number of particles in the filter. default 30        -->
    <param name="particles" value="30"/>

    <!-- Initial map size  -->
    <param name="xmin" value="-1"/>
    <param name="ymin" value="-1"/>
    <param name="xmax" value="1"/>
    <param name="ymax" value="1"/>

    <!-- Processing parameters (resolution of the map)  -->
    <param name="delta" value="0.025"/>

    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>

    <remap from="scan" to="$(arg scan_topic)"/>
  </node>
    
  <arg name="rviz_config" value="gmapping" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find map_sim)/rviz/mapping.rviz" />
  
  <!-- node pkg="map_sim" name="nav" type="nav_goals.py" required="true" output="screen"/ -->
  
</launch>
